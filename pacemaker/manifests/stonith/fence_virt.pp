# generated by agent_generator.rb, manual changes will be lost

define pacemaker::stonith::fence_virt (
  $debug = undef,
  $serial_device = undef,
  $serial_params = undef,
  $channel_address = undef,
  $ipport = undef,
  $port = undef,
  $timeout = undef,
  $delay = undef,
  $domain = undef,

  $interval = "60s",
  $ensure = present,
  $pcmk_host_list = undef,

  $tries = undef,
  $try_sleep = undef,
) {
  $debug_chunk = $debug ? {
    undef => "",
    default => "debug=\"${debug}\"",
  }
  $serial_device_chunk = $serial_device ? {
    undef => "",
    default => "serial_device=\"${serial_device}\"",
  }
  $serial_params_chunk = $serial_params ? {
    undef => "",
    default => "serial_params=\"${serial_params}\"",
  }
  $channel_address_chunk = $channel_address ? {
    undef => "",
    default => "channel_address=\"${channel_address}\"",
  }
  $ipport_chunk = $ipport ? {
    undef => "",
    default => "ipport=\"${ipport}\"",
  }
  $port_chunk = $port ? {
    undef => "",
    default => "port=\"${port}\"",
  }
  $timeout_chunk = $timeout ? {
    undef => "",
    default => "timeout=\"${timeout}\"",
  }
  $delay_chunk = $delay ? {
    undef => "",
    default => "delay=\"${delay}\"",
  }
  $domain_chunk = $domain ? {
    undef => "",
    default => "domain=\"${domain}\"",
  }

  $pcmk_host_value_chunk = $pcmk_host_list ? {
    undef => '$(/usr/sbin/crm_node -n)',
    default => "${pcmk_host_list}",
  }

  # $title can be a mac address, remove the colons for pcmk resource name
  $safe_title = regsubst($title, ':', '', 'G')

  if($ensure == absent) {
    exec { "Delete stonith-fence_virt-${safe_title}":
      command => "/usr/sbin/pcs stonith delete stonith-fence_virt-${safe_title}",
      onlyif => "/usr/sbin/pcs stonith show stonith-fence_virt-${safe_title} > /dev/null 2>&1",
      require => Class["pacemaker::corosync"],
    }
  } else {
    package {
      "fence-virt": ensure => installed,
    } ->
    exec { "Create stonith-fence_virt-${safe_title}":
      command => "/usr/sbin/pcs stonith create stonith-fence_virt-${safe_title} fence_virt pcmk_host_list=\"${pcmk_host_value_chunk}\" ${debug_chunk} ${serial_device_chunk} ${serial_params_chunk} ${channel_address_chunk} ${ipport_chunk} ${port_chunk} ${timeout_chunk} ${delay_chunk} ${domain_chunk}  op monitor interval=${interval}",
      unless => "/usr/sbin/pcs stonith show stonith-fence_virt-${safe_title} > /dev/null 2>&1",
      tries => $tries,
      try_sleep => $try_sleep,
      require => Class["pacemaker::corosync"],
    } ->
    exec { "Add non-local constraint for stonith-fence_virt-${safe_title}":
      command => "/usr/sbin/pcs constraint location stonith-fence_virt-${safe_title} avoids ${pcmk_host_value_chunk}",
      tries => $tries,
      try_sleep => $try_sleep,
    }
  }
}
